//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnrealWizard {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UnrealWizard.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #pragma once
        ///
        ///#include &quot;CoreMinimal.h&quot;
        ///#include &quot;GameFramework/Actor.h&quot;
        ///
        ///#include &quot;${CLASS_NAME}.generated.h&quot;
        ///
        ///UCLASS()
        ///class ${API_NAME} A${CLASS_NAME} : public AActor
        ///{
        ///    GENERATED_BODY()
        ///
        ///public:
        ///    A${CLASS_NAME}();
        ///
        ///protected:
        ///    virtual void BeginPlay() override;
        ///
        ///public:
        ///    virtual void TickComponent(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction) override;
        ///
        ///};.
        /// </summary>
        internal static string ActorHeader {
            get {
                return ResourceManager.GetString("ActorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;${CLASS_NAME}.h&quot;
        ///
        ///A${CLASS_NAME}::A${CLASS_NAME}()
        ///{
        ///    PrimaryActorTick.bCanEverTick = true;
        ///}
        ///
        ///void A${CLASS_NAME}::BeginPlay()
        ///{
        ///    Super::BeginPlay();
        ///}
        ///
        ///void A${CLASS_NAME}::Tick(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction)
        ///{
        ///    Super::Tick(DeltaTime);
        ///}.
        /// </summary>
        internal static string ActorSource {
            get {
                return ResourceManager.GetString("ActorSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #pragma once
        ///
        ///#include &quot;CoreMinimal.h&quot;
        ///#include &quot;Components/ActorComponent.h&quot;
        ///
        ///#include &quot;${CLASS_NAME}.generated.h&quot;
        ///
        ///UCLASS()
        ///class ${API_NAME} U${CLASS_NAME} : public UActorComponent
        ///{
        ///    GENERATED_BODY()
        ///
        ///public:
        ///    U${CLASS_NAME}();
        ///
        ///protected:
        ///    virtual void BeginPlay() override;
        ///
        ///public:
        ///    virtual void TickComponent(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction) override;
        ///
        ///};.
        /// </summary>
        internal static string ComponentHeader {
            get {
                return ResourceManager.GetString("ComponentHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;${CLASS_NAME}.h&quot;
        ///
        ///U${CLASS_NAME}::U${CLASS_NAME}()
        ///{
        ///    PrimaryActorTick.bCanEverTick = true;
        ///}
        ///
        ///void U${CLASS_NAME}::BeginPlay()
        ///{
        ///    Super::BeginPlay();
        ///}
        ///
        ///void U${CLASS_NAME}::Tick(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction)
        ///{
        ///    Super::Tick(DeltaTime);
        ///}.
        /// </summary>
        internal static string ComponentSource {
            get {
                return ResourceManager.GetString("ComponentSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #pragma once
        ///
        ///#include &quot;CoreMinimal.h&quot;
        ///#include &quot;Subsystems/GameInstanceSubsystem.h&quot;
        ///#include &quot;${CLASS_NAME}.generated.h&quot;
        ///
        ///UCLASS()
        ///class ${API_NAME} U${CLASS_NAME} : public UGameInstanceSubsystem
        ///{
        ///	GENERATED_BODY()
        ///	
        ///};.
        /// </summary>
        internal static string GameInstanceSubsystemHeader {
            get {
                return ResourceManager.GetString("GameInstanceSubsystemHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;${CLASS_NAME}.h&quot;.
        /// </summary>
        internal static string GameInstanceSubsystemSource {
            get {
                return ResourceManager.GetString("GameInstanceSubsystemSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #pragma once
        ///
        ///#include &quot;${CLASS_NAME}.generated.h&quot;
        ///
        ///UINTERFACE(Blueprintable)
        ///class ${API_NAME} U${CLASS_NAME} : public UInterface
        ///{
        ///    GENERATED_BODY()
        ///};
        ///
        ///class I${CLASS_NAME}
        ///{
        ///    GENERATED_BODY()
        ///
        ///public:
        ///    
        ///};.
        /// </summary>
        internal static string InterfaceHeader {
            get {
                return ResourceManager.GetString("InterfaceHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string InterfaceSource {
            get {
                return ResourceManager.GetString("InterfaceSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #pragma once
        ///
        ///#include &quot;CoreMinimal.h&quot;
        ///#include &quot;Modules/ModuleInterface.h&quot;
        ///
        ///class F${CLASS_NAME} : public IModuleInterface
        ///{
        ///public:
        ///	static inline F${CLASS_NAME} Get()
        ///	{
        ///		return FModuleManager::LoadModuleChecked&lt;F${CLASS_NAME}&gt;(&quot;${CLASS_NAME}&quot;);
        ///	}
        ///
        ///	static inline bool IsAvailable()
        ///	{
        ///		return FModuleManager::Get().IsModuleLoaded(&quot;${CLASS_NAME}&quot;);
        ///	}
        ///
        ///	virtual void StartupModule() override;
        ///	virtual void ShutdownModule() override;
        ///};.
        /// </summary>
        internal static string ModuleHeader {
            get {
                return ResourceManager.GetString("ModuleHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;${CLASS_NAME}.h&quot;
        ///#include &quot;Modules/ModuleManager.h&quot;
        ///
        ///#include &quot;Log.h&quot;
        ///
        ///void F${CLASS_NAME}::StartupModule()
        ///{
        ///	UE_LOG(Log${CLASS_NAME}, Log, TEXT(&quot;${CLASS_NAME} module starting up&quot;));
        ///}
        ///
        ///void F${CLASS_NAME}::ShutdownModule()
        ///{
        ///	UE_LOG(Log${CLASS_NAME}, Log, TEXT(&quot;${CLASS_NAME} module shutting down&quot;));
        ///}
        ///
        ///IMPLEMENT_GAME_MODULE(F${CLASS_NAME}, ${CLASS_NAME});.
        /// </summary>
        internal static string ModuleSource {
            get {
                return ResourceManager.GetString("ModuleSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #pragma once
        ///
        ///#include &quot;CoreMinimal.h&quot;
        ///#include &quot;UObject/NoExportTypes.h&quot;
        ///
        ///#include &quot;${CLASS_NAME}.generated.h&quot;
        ///
        ///UCLASS()
        ///class ${API_NAME} U${CLASS_NAME} : public UObject
        ///{
        ///    GENERATED_BODY()
        ///
        ///public:
        ///    
        ///};.
        /// </summary>
        internal static string ObjectHeader {
            get {
                return ResourceManager.GetString("ObjectHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;${CLASS_NAME}.h&quot;
        ///.
        /// </summary>
        internal static string ObjectSource {
            get {
                return ResourceManager.GetString("ObjectSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///#pragma once
        ///
        ///#include &quot;CoreMinimal.h&quot;
        ///#include &quot;Subsystems/WorldSubsystem.h&quot;
        ///#include &quot;${CLASS_NAME}.generated.h&quot;
        ///
        ///UCLASS()
        ///class ${API_NAME} U${CLASS_NAME} : public UWorldSubsystem
        ///{
        ///	GENERATED_BODY()
        ///	
        ///};
        ///.
        /// </summary>
        internal static string WorldSubsystemHeader {
            get {
                return ResourceManager.GetString("WorldSubsystemHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;${CLASS_NAME}.h&quot;
        ///.
        /// </summary>
        internal static string WorldSubsystemSource {
            get {
                return ResourceManager.GetString("WorldSubsystemSource", resourceCulture);
            }
        }
    }
}
